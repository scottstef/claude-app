name: Build and Deploy to Cloud Run

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  APP_IMAGE_NAME: claude-chat-app
  GCP_REGION: us-central1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # UPDATED: Added id-token write permission for proper GCP authentication
    permissions:
      contents: read
      packages: write
      id-token: write # NEW: Required for GCP authentication

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Generate version tag
      - name: Generate version tag
        id: version
        run: |
          SHA_SHORT=$(echo ${{ github.sha }} | cut -c1-7)
          echo "version=$SHA_SHORT-$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      # UPDATED: Enhanced Google Cloud authentication
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"
          token_format: "access_token"
          # NEW: Create credentials file
          create_credentials_file: true

      # Set up Google Cloud SDK
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      # UPDATED: Configure Docker for GCR with access token
      - name: Configure Docker for GCR
        run: |
          gcloud --quiet auth configure-docker gcr.io

          # NEW: Verify configuration was successful
          cat ~/.docker/config.json || echo "Docker config not found"
          echo "Using GCP Project: ${{ secrets.GCP_PROJECT_ID }}"

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # UPDATED: Build and push Docker image with explicit authentication
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          # NEW: Added load to ensure image is available for local verification
          load: false
          provenance: false
          tags: |
            gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APP_IMAGE_NAME }}:latest
            gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APP_IMAGE_NAME }}:${{ steps.version.outputs.version }}
          # Use the build secrets to pass credentials
          secrets: |
            "GCP_ACCESS_TOKEN=${{ steps.auth.outputs.access_token }}"

      # Deploy to Cloud Run from GCR
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.APP_IMAGE_NAME }} \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.APP_IMAGE_NAME }}:latest \
            --region ${{ env.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 5000 \
            --memory 1Gi \
            --cpu 1 \
            --max-instances 1 \
            --min-instances 0 \
            --timeout 600s \
            --concurrency 80 \
            --service-account ${{ env.APP_IMAGE_NAME }}@${{ secrets.GCP_PROJECT_ID }}.iam.gserviceaccount.com \
            --set-env-vars GCS_BUCKET_NAME=claude_chat_backups \
            --set-secrets ANTHROPIC_API_KEY=anthropic-api-key:latest,SECRET_KEY=flask-secret-key:latest,GITHUB_TOKEN=github-token:latest
